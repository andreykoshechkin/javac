Ситуация, когда при удаление контейнеров, данные этих контейнеров стираются, и если мы по новой запустим контейнеры, то старых данных там не будет, так как в этом случае, будет
использовать начальный образ базы данных, а в начальном образе базы данных нет никаких данных. Чтобы это избежать, нужно воспользоваться маппингом томов. 

Есть два варианта использование томов (маппинг томов)

1. # Маппинг томов в процессе разработки:
   Когда у нас есть два тома(Volume), один находится в контейнере внутри виртуальной машине, а второй находится у нас на компьютере, 
   и мы хотим примапить (маппинг томов) наш том на нашем компьютере, к тому тому, что находится в контейнере внутри виртуальной машины.
   Таким образом, содержимое папки внутри контейнера, будет заменено на содержимое папки нашего компьютера.
   Такой подходи используется в процессе разработки, поскольку любые изменения, внесенные в локальные файлы, могут быть немедленно видны в контейнере, и наоборот. Здесь действует принцип read/write.
 

2. # Сохранение состояния данных для доступа из разных контейнеров: (позволяет сохранить данные базы данных)
   Это когда у нас есть два тома внутри виртуальной машины, но один том находится в контейнере, а другой том находится вне контейнера.
   Такой маппинг позволяет сохранять состояние данных (например, базы данных) в постоянном хранилище, которое не зависит от жизненного цикла контейнеров.
   Таким образом, данные могут быть общими для разных контейнеров и сохраняться после остановки или удаления контейнеров.





   
