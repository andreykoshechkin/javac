FROM node:alpine		#Указываем базовый образ, если образа нет то докер скачает его
	
WORKDIR /app			#Внутри контейнера создаст рабочую директорию. В этой директории будут хранится все файлы приложения

EXPROSE 3000			#Этот параметр скорее просто для информации. Указывает на каком порту запускать приложение
	
COPY package*.json ./		#Скопирует все файлы, package.json в директорию app. 'В package.json лежат все зависимости'.

RUN npm install			#Тут мы говорим докеру, чтобы он выполнил команду npm install внутри контейнера. npm install загрузит все зависимости что есть в файле package.json(этот файл будует внутри контейнера 'предыдущий шаг')

COPY . ./				#Копируем все файлы проекта в рабочую директорию внутри контейнера, то есть, в директорию app

CMD ["npm", "run", "dev"]	#Выполни набор команд.

========================================================================================================================================================================
FROM openjdk:11-jre-slim

WORKDIR /app

EXPOSE 3000

# Копируем только pom.xml для установки зависимостей Maven
COPY pom.xml ./

# Устанавливаем зависимости
RUN mvn dependency:go-offline

# Копируем остальные файлы проекта
COPY src ./src

# Собираем приложение
RUN mvn package

# Запускаем приложение
CMD ["java", "-jar", "target/app.jar"]



Копировние -> запуск -> копирование #Это хорошая практика

Пример:
# Копируем только pom.xml для установки зависимостей Maven
COPY pom.xml ./

# Устанавливаем зависимости
RUN mvn dependency:go-offline

# Копируем остальные файлы проекта
COPY src ./src