Файл Dockerfile содержит набор инструкций, следуя которым Docker будет собирать образ контейнера

Общий синтаксис: docker build . -t какМыХотимНазвать:пишемВерсию






=============================================================================
FROM openjdk:19
COPY ./out/production/DockerHelloWorld/ /tmp
WORKDIR /tmp
ENTRYPOINT ["java","Название main класса"]

(класс Main.class должен быть скомпилирован, тоесть находится в директории out)
================================================================================
Далее: в терминале  C:\Users\ksh\IdeaProjects\DockerHello> -> docker build . 
docker image build -t тоКакМыХотимНазватьImages .
docker build . -t my-project-test . 

docker build . -t my-project-test -f названиеDockerFile.		<-- Если название DockerFile, иное, к примеру DockerProd, то с помощью -а мы можем явно указать название DockerFile 
==============================================================================
Запуск: в терминале docker run -it c11987967258 (это id образа)
docker run -ti image_name. Эта команда создаёт контейнер из образа и запускает его.



FROM 		# Задаёт базовый (родительский) образ.

LABEL 	 	# Описывает метаданные. Например — сведения о том, кто создал и поддерживает образ.

ENV 		# Устанавливает постоянные переменные среды.

RUN 		# Выполняет команду и создаёт слой образа. Используется для установки в контейнер пакетов.

COPY 		# Скопирует в директорию (WORKDIR) все файлы и папки.
		  Пример: COPY . .

ADD 		# Копирует файлы и папки в контейнер, может распаковывать локальные .tar-файлы.

CMD		# Описывает команду с аргументами, которую нужно выполнить когда контейнер будет запущен. Аргументы могут быть переопределены при запуске контейнера. В файле может присутствовать лишь одна инструкция CMD.
Пример:		  CMD ["java", "Main"]	<--Если мы допустили ошибку, то просто нужно изменить название на правльное и пересобрать образ (docker build .)	      

WORKDIR 	# Задаёт рабочую директорию внутри моего image. Внутри образа будет создана папка. WORKDIR нужен, чтобы избежать слуаев, перезапи сиситемных файлов. 
Пример:   	  WORKDIR /app

ARG — задаёт переменные для передачи Docker во время сборки образа.

ENTRYPOINT — предоставляет команду с аргументами для вызова во время выполнения контейнера. Аргументы не переопределяются.

EXPOSE — указывает на необходимость открыть порт.

VOLUME — создаёт точку монтирования для работы с постоянным хранилищем.





