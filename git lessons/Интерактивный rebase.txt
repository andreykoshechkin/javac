Команда git rebase -i (где -i означает "интерактивное") позволяет вам выполнить перебазирование с возможностью взаимодействия и редактирования истории коммитов. 
Это очень полезная команда для изменения, переупорядочивания и объединения коммитов в вашей ветке. Команда git rebase -i открывает текстовый редактор с списком коммитов,
которые вы можете редактировать перед их перебазированием. 

========================================================================================================================================================================

Интерактивный rebase работает только с теми коммитами, которые идут после указанного. 
Пример: 
       1. git rebase -i HEAD    #В этом случае ничего не произайдет.
       2. git rebase -i HEAD^   #В этом случае мы сможен настраиват только последний коммит.
       3. git rebase -i HEAD~3  #В этом случае мы сможем настраивать все коммиты (если коммитов всего 3. Если коммитов 5 то нужно написать git rebase~5)


========================================================================================================================================================================

Вот как использовать git rebase -i:  Запустите git rebase -i и укажите коммит, до которого вы хотите выполнить перебазирование. 
				     Например, если вы хотите перебазировать все коммиты в ветке feature на master, используйте: git rebase -i master feature
				     Git откроет текстовый редактор (обычно это Vim, но его можно настроить на другой редактор) с перечнем коммитов в вашей ветке.

В режиме интерактивного перебазирования вы можете выполнить следующие действия:
 pick: Это коммит, который будет просто перемещен как есть.
 reword: Вы можете изменить сообщение коммита.
 edit: Перебазирование остановится на этом коммите, чтобы вы могли внести изменения (например, исправить ошибки) и продолжить перебазирование.
 squash: Этот коммит будет объединен с предыдущим коммитом.
 fixup: Этот коммит также будет объединен с предыдущим, но его сообщение игнорируется.
 Редактируйте команды перед каждым коммитом в текстовом редакторе, сохраните и закройте редактор.

Git выполнит перебазирование в соответствии с вашими указаниями.

git rebase -i предоставляет вам полный контроль над историей коммитов и позволяет вам улучшить структуру и чистоту истории.
Однако будьте осторожны при изменении истории, особенно если работаете в команде, чтобы избежать проблем с совместной работой и конфликтами.

========================================================================================================================================================================

Отличие: git rebase и git rebase -i
 # git rebase    - позволяет изменять место расположение ветки (делать преобразование ветки)
 # git rebase -i - позволяет изменять место коммитов в ветке, редактировать коммиты, объединять коммиты


============================
pick 8847df
reword 8847df