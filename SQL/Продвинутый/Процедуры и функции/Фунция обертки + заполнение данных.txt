CREATE OR REPLACE PROCEDURE Cus_Act2_Wrapper (
    P_id IN NUMBER,                               -- ID для получения данных
    P_ern OUT VARCHAR2,                           -- Сообщение об ошибке
    P_act IN NUMBER,                              -- Тип действия
    P_mode IN NUMBER DEFAULT 1,                   -- Режим вызова
    P_result OUT NUMBER                           -- Выходной параметр для результата функции
) AS
    l_cus xxi.account2.CUS_TYPE;                 -- Структура данных клиента
    l_plecs xxi.account2.T_GCS;                  -- Таблица категорий/групп клиента
    l_adr xxi.account2.TAB_ADDR;                 -- Таблица адресов клиента
    l_dem xxi.account2.T_DCM;                    -- Таблица документов клиента
    l_tel xxi.account2.T_TEL;                    -- Таблица телефонов клиента
    l_eml xxi.account2.T_EMAIL;                  -- Таблица адресов электронной почты клиента
    l_evn xxi.account2.T_EVENTS;                  -- Таблица событий
BEGIN
    -- Выполнение SELECT для получения необходимых данных
    SELECT *
    INTO l_cus
    FROM xxi.account2.CUS_TYPE
    WHERE id = P_id;  -- Предполагается, что у вас есть поле id в вашей таблице

    SELECT *
    INTO l_plecs
    FROM xxi.account2.T_GCS
    WHERE customer_id = P_id;  -- Подходящий критерий для выборки

    SELECT *
    INTO l_adr
    FROM xxi.account2.TAB_ADDR
    WHERE customer_id = P_id;

    SELECT *
    INTO l_dem
    FROM xxi.account2.T_DCM
    WHERE customer_id = P_id;

    SELECT *
    INTO l_tel
    FROM xxi.account2.T_TEL
    WHERE customer_id = P_id;

    SELECT *
    INTO l_eml
    FROM xxi.account2.T_EMAIL
    WHERE customer_id = P_id;

    SELECT *
    INTO l_evn
    FROM xxi.account2.T_EVENTS
    WHERE customer_id = P_id;

    -- Вызов функции Cus_Act2 и сохранение её результата в P_result
    P_result := Cus_Act2(
        P_ern => P_ern,
        P_act => P_act,
        P_Cus => l_cus,
        P_plecs => l_plecs,
        P_adr => l_adr,
        P_dem => l_dem,
        P_tel => l_tel,
        P_mode => P_mode,
        P_eml => l_eml,
        P_mfv => 1,  -- Можете передать значение по умолчанию или какое-то другое
        P_evn => l_evn
    );

    -- Проверка результата
    IF P_result = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Ошибка выполнения функции: ' || P_ern);
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        P_ern := 'Данные не найдены для указанного ID.';
        P_result := 0;
    WHEN OTHERS THEN
        -- Пробрасывание исключения, добавляем дополнительную информацию
        RAISE_APPLICATION_ERROR(-20002, 'Ошибка в процедуре обертки: ' || SQLERRM);
END Cus_Act2_Wrapper;
