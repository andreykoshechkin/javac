Как sql создает индексы: Когда мы создаем таблицу с первичным ключем, то автоматически создается индекс, это и есть B-tree, которая создает отдельный файл,
			 в котором будут эти ключи. При этом, индекс хранит ссылку на настоящию строку в таблцице.

Цель B-tree дерева заключается в том, чтобы как можно меньше считывать данные из сегмента жесткого диска в оперативную память.

Выборка индексированных данных происходит с помощъю B-tee алгоритма, который имеет корень, узлы и ссылки на эти узлы, при этом, узлы могут иметь так же и 
потомков. Сами же индексы храняться в элементах узла и содержат в себе ссылку на настоящию строку в таблцице. 
Сам поиск значения в B-дереве осуществляется путем последовательного перехода по узлам дерева, начиная с корневого узла,
и сравнения ключа, который мы ищем с ключами в текущем узле.

Ссылка на следующий узел, находится между элементами либо по краям, если эти элементы расположены по краям узла.
Элементы узла хранятя в одном сегменте на жестком диске.


Кластерные индексы: это те индексы, которые хранят в себе сразу всю строку т.е кластерный индекс не хранит в себе ссылку на строку. 
на одну таблицу может быть только один класстерный индекс.

Индексы нужны для того, чтобы ускорить поиск элементов в таблице. Без индексов, нам пришлось бы сканировать всю таблицу целиком.
==================================================================================================
Для составных первичных ключен нужно создавать свой index: 
Пример: CREATE UNIQUE INDEX unique_fligh_id_and_seat_no_inx ON ticket(flight, seat_no)  Теперь когда мы захотим получить выборку по flight, seat_no то будет использоваться 
не full scan, а index scan.

Операции INSERT, UPDATE, DELETE обновляют индексы
