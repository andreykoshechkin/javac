Транзакия - Это работа в рамках соединения с базой данных. Имеет два состояния COMMIT - Выполнение и ROLLBACK - Откат.

PostgreSQL поддерживает только два уроня изоляции транзакции это Serilazible, Read commit

Свойста, которыми должна обладать транзакция ACID:
Atomicity (Атомарность) - транзакция либо будет выполнена полностью либо не выполнится вообще.
 			  Пример:

Consistenct(Согласованность) - если транзакция начилась в момент, когда все данные были согласованны, то после коммита, данные так же должны остаться согласованны. 
			       Пример: если в бд у нас есть колонка с not null значением, а при сохранение сущности мы в эту колону поставили null, 
			       то транзакция не должна быть закомиченна. 

Isolation(Изолированность) - во время выполнения транзакции, другие транзакции не должны влиять на ее результат. 

Durability(Устойчисвоть) - результат изменения должен остаться сохраненным после возвращения в систему 

============================================================================================================================

COMMIT - Выполнение.
ROLLBACK - Откат.

============================================================================================================================
Транзакции могут работать параллельно друг-другу
Пробелы которые возникают при транзакции: Порядок сложности с вверху вниз

Lost update(Потерянное обновление) не актуальна				//Происходит, когда паралельные транзакции обновляют данные, при этом вторая транзакция 
									//откатывает изменения назад, в следствии чего обновление теряется. 

Dirty Read(Грязное чтение) 						//Это когда изменение данных не зафиксированны от сюда мы получаем некоректные данные. 

Non Repeatable Read(неповторяющееся чтение) 				//Это когда, одна транзакция считывает данные дважды, но после первого считывания, вторая транзакция 
									//делает UPDATE и после делает commit, в следствии чего мы получаем не актуальные данные.

Phantom read(фантомное чтение)						//Это когда, одна транзакция считывает данные дважды, но после первого считывания, вторая транзакция 
									//делает либо INSERT либо UPDATE и после делает commit, в следствии чего мы получаем не актуальные данные.				



============================================================================================================================


Уровни изолированности транзакций:
			Фантомное чтение| Неповторяющееся чтение|Грязное чтение|Потерянное обновление
1 SERIALIZABLE        		+	|	     +		|	+      |	  +
2 REPEATABLE READ 		-	|	     +		|	+      |	  +
3 READ COMMITTED 		-	|	     -		|	+      |	  +
4 READ UNCOMMITTED		-	|	     -		|	-      |	  +

Устанавливаем уровень изоляции SERIALIZABLE ---> BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE 

Устанавливаем уровень изоляции  REPEATABLE READ  ---> BEGIN TRANSACTION ISOLATION LEVEL  REPEATABLE READ 

