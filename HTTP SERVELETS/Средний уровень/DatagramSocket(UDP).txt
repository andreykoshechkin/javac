

DatagramSocket:		//Класс. который работает по протоколу UDP и отправляет датаграм пакеты.
			DatagramSocket в отличие от TCP где для клиента мы использовали Socket а для сервера ServerSocket. в UDP используется один класс как и для сервера так и для клиента.
			Но в отличие от клиента, при создание сервера мы должны передать порт на котором он будет работать.
			
DatagramPacket:		//Класс, который создает пакет. В качестве параметров:
			     ДЛЯ КЛИЕНТА:    DatagramPacket (массив байт, длину массива, Куда передать пакет, порт)
			     ДЛЯ СЕРВЕРА:     DatagramPacket (массив байт, длину массива) 
			     длина массива должны быть одинакова как на староне клиента так и на стороне сервера.
			  
Методы:
.send()			//Метод,  который отправляет датаграм пакет
.receive()			//Метод, который принимает датаграм пакет

========================================================================================================
Реализация клиента:

Инструкция: 
1) Создаем класс DatagramSocket
2) Создаем массив из байт и передаем какой-то сообщение(В нашем случае scanner)
3) Нужно создать класс InetAdress, чтобы указать на какой сервер отправлять  датаграм пакеты
4) Создаем  датаграм DatagramPacket 
5) Через метод  .send отправляем пакеты

   try (DatagramSocket datagramSocket = new DatagramSocket()) {

            Scanner scanner = new Scanner(System.in);
            byte[] massive = scanner.nextLine().getBytes();

            InetAddress inetAddress = Inet4Address.getByName("localhost");
            DatagramPacket packet = new DatagramPacket(massive, massive.length, inetAddress, 80);
            datagramSocket.send(packet);

        }
========================================================================================================	
Реализация сервера:

     try (DatagramSocket datagramSocket = new DatagramSocket(80)) {
            byte[] massive = new byte[512];
            DatagramPacket packet = new DatagramPacket(massive, massive.length);
            datagramSocket.receive(packet);

            System.out.println(new String(massive));

        }
========================================================================================================