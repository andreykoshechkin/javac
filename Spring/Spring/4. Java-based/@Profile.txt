@Profile			//Это некая метка и на основании этой метки мы можем включать или выключать бины или конфигурационные классы в зависимости 
				  от активного профиля.

===============================================================================================================================================================	  
Список активных профилей задается для приложения следующими способами:
в properties добавляется spring.profiles.active		//Активный профиль! Говорит, какие профайлы включены.Добавляется в properties

===============================================================================================================================================================	  

Как активировать профайлы: 
spring.profiles.active=web			<--- теперь мы можем включить только те бины/классы, у которых @Profile(web)
spring.profiles.active=web, repo		<--- теперь мы можем включить только те бины/классы, у которых @Profile(web) или repo


===============================================================================================================================================================	  


@Profile("repo") @Profile("repo||web")  @Profile("repo&&web") 

Пример:Создай мне бин userRepository1 только в том случае, если в spring.profiles.active есть хначение "repo"
@Bean
@Profile("repo") 
  public UserRepository userRepository1(ConnectionManager connectionPoolBean) {
        return new UserRepository(connectionPoolBean);
}

=========
 context.getEnvironment().getActiveProfiles();  <-- Получить активные профайлы
 context.getEnvironment().setActiveProfiles();	<-- Добавить новые активные профайлы