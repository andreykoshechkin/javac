Блокировки:
   // @Lock(LockModeType.OPTIMISTIC)			<-- Опимистическая блокировка
  //  @Lock(LockModeType.PESSIMISTIC_FORCE_INCREMENT)   <-- Пессимистическая блокировка
    @EntityGraph(attributePaths = "locales")
    @Query("select c from CompanyEntity c ")
    List<CompanyEntity> findAllAndCompanyLocales();

========
@QueryHints

    @QueryHints(@QueryHint(name = "имяХинта", value = "значение"))
    @Lock(LockModeType.OPTIMISTIC)
    List<CompanyEntity> findAllExampleBy(Pageable pageable);

    Пример:
    @QueryHints(@QueryHint(name = "org.hibernate.fetchSize", value = "50"))
    @Lock(LockModeType.OPTIMISTIC)
    List<CompanyEntity> findAllExampleBy(Pageable pageable);



Список зарезервированных слов для QueryHints:

    public static final String READ_ONLY = "org.hibernate.readOnly";
    public static final String CACHEABLE = "org.hibernate.cacheable";
    public static final String CACHE_MODE = "org.hibernate.cacheMode";
    public static final String CACHE_REGION = "org.hibernate.cacheRegion";
    public static final String COMMENT = "org.hibernate.comment";
    public static final String FETCH_SIZE = "org.hibernate.fetchSize";
    public static final String FLUSH_MODE = "org.hibernate.flushMode";
    public static final String TIMEOUT_HIBERNATE = "org.hibernate.timeout";
    public static final String TIMEOUT_JAKARTA_JPA = "jakarta.persistence.query.timeout";
    public static final String NATIVE_LOCKMODE = "org.hibernate.lockMode";
    public static final String FOLLOW_ON_LOCKING = "hibernate.query.followOnLocking";
    public static final String NATIVE_SPACES = "org.hibernate.query.native.spaces";