@Transactional содержит в себе следующие настройки:

value и transactionManage - дает возможность указывать transactionManager того IoC контейнера, который должен управлять транзакцими
label - используется для логгрования, чтобы смотреть какой transaction Manager выполняется

propagation - влияет на взаимодействие CglibProxy и отвечает за открытие и закрытия транзакции. propagation имеет так же настройки:
 1. REQUARED      - выполнять код нужно в текущей транзакции, если транзакции нет то происходит открытие транзакции
 2. SUPPORTS      - проверяет есть ли открытая транзакция, если ее нет то он ее и не откроет в отличие от REQUARED 
 3. MANDATORY     - проверяет есть ли открытая транзакция, если ее нет то пробросит exception
 4. REQUERIS_NEW  - создаст новую транзакцию, даже если мы уже имеет открытую транзакцию при этом, открытую транзакцию приостановит. На самом деле
		    мы можем столкнуться с deadLock, потому-что мы не можем приостоновить существующую транзакцию в рамках одного соединения
		    и открыть новую, то есть, для новой транзакции нам нужно будет открыть новое соединение
 5. NOT_SUPPORTED - выполнение метода произойдет не в транзакции, а если транзакия открыта, то он ее приостоновит
 6. NEVER  	  - выполнение не в транзакции если транзакция открыта будет exception.

isolation   - уровни изоляции транзакии
readOnly    - если в методе происходит только чтение данных, то readOnly нужно ставить true
rollbackFor - говорит нам, при каких исключение делать rollBack
rollbackFor - говорит нам, в каких случаях НЕ делать noRollbackFor