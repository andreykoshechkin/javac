Spring-boot	# это модуль, который занимается автоконфигурацией, дело в том, что приложение написанное с помощью Spring, представляет из себя совокупность разных модулей, у нас есть и модуль по работе с базой данных
		  и модуль для тестов и тд, но конфигурировать каждый модуль весьма сложно, так как каждый модуль требует свою конфигурацию, набор properties, бинов.
		  Spring boot как раз таки и берет на себя задачу, по конфигрурированию всех модулей, он из коробки предоставит нам конфигурационный класс для модуля, который мы хотим использовать
		  Например: для работы с базой данных есть конфигурационный класс JpaAutoConfiguration, для работы с Kafka есть KafkaAutoConfiguration. 
	

		  По мимо прочего, Spring boot решает проблему несовместимости зависимостей. Каждый spring-boot release разрабатывается и тестируется с определнным набором зависимостей.
		  Все что нам нужно сделать, это указать версию spring-boot, а указав версию, мы автоматический определим, какие зависимости(jar) нам нужны.


Несовместимости зависимостей 	# это ситуации, когда версии различных библиотек или фреймворков, не совместимы между собой.

========================================================================================================================================================================================================================
Создание Spring-boot приложения: 
 Способ 1: Добавить соответствующие jar зависимости. spring-boot-starter-parent <-- Внутри него есть  <artifactId>spring-boot-dependencies</artifactId> в которой и реализован dependency manager
 Способ 2: С помощью Spring-initializr   # file -> new -> project 


Если мы пишем приложение на Spring-boot, то в нашем pom нам не нужно указывать версию, версии зависимостей лежат в  <artifactId>spring-boot-dependencies</artifactId>
 