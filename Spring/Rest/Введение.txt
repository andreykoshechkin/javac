REST - архетиктурный стиль, для общения различных систем передавая состояния, то есть, нам теперь не нужно возвращать html.
       Rest не хранит состояние, состояние хранит клиент

Ранее мы использовали controller для взаимодействия клиента и сервера и в этом случаи мы сталкивались с рядом ограничений:
	1. Для отправки данных мы использовали <form>, а <form> поддерживает только методы get/post, а это уже url encode content type, следовательно, мы не могли 
	   передавать json, xml и другие форматы не доступны. Так же, мы нарушали api desing, так как для удаление или обновления мы отправляли post запрос, хотя в нашем
	   распоряжении есть другие методы put,delete, patch. 
	2. Все ответы от клиента это целая html с headr, body, а ведь нам нужно передавать именно данные, а не целую страницу
	3. Наши запросы работают только для браузера, они не работают для других сервисов (mobile, микросервесная архетиктура) 
	 
Rest решает все эти ограничения, а именно:
	1. Rest поддерживает все методы (get/post/put/patch)
	2. Responce/Request мы можем передавать в любом формате, к примеру в формате json
	3. Наши запросы могут приходить из разных сервисов


Rest клиенты:
URL/HttpClient
RestTemplate
WebClient
Feign
 

