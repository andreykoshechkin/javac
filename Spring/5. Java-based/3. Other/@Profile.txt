@Profile			//Это некая метка и на основании этой метки мы можем включать или выключать бины или конфигурационные классы в зависимости 
				  от активного профиля.

===============================================================================================================================================================	  
Список активных профилей задается для приложения следующими способами:
в properties добавляется spring.profiles.active		//Активный профиль! Говорит, какие профайлы включены.Добавляется в properties

===============================================================================================================================================================	  

Как активировать профайлы: 
spring.profiles.active=web			<--- теперь мы можем включить только те бины/классы, у которых @Profile(web)
spring.profiles.active=web, repo		<--- теперь мы можем включить только те бины/классы, у которых @Profile(web) или repo


===============================================================================================================================================================	  


@Profile("repo") @Profile("repo||web")  @Profile("repo&&web") 

Пример:Создай мне бин userRepository1 только в том случае, если в spring.profiles.active есть хначение "repo"
@Bean
@Profile("repo") 
  public UserRepository userRepository1(ConnectionManager connectionPoolBean) {
        return new UserRepository(connectionPoolBean);
}

=========

Так же мы можем установить профайлы через context, для этого нужно у AnnotationConfigApplicationContext вызвать соответствующие методы, + обновить context.
Обновить context нужно из-за того, что когда мы проиниуиализировали AnnotationConfigApplicationContext все бины уже создались и прошли жизненный цикл, следовательно, нашего профайла не будет 


 context.register(ConfigurationClass.class)
 context.getEnvironment().getActiveProfiles(); 						 <-- Получить массив строк из активных профайлов
 context.getEnvironment().setActiveProfiles("profile1", "profile2", "web", "prod");	 <-- Добавить новые активные профайлы
 context.refrech()				 				         <-- Обновит контекст.