TransactionManager		# Отвечает за транзакции

Транзакции в спринг		# Управление транзакциями в Spring, осуществляется с помощью прокси-объектов, это либо CGLIB proxy, либо Dynamic proxy и чаще всего это именно CGLIB proxy
				  так как, следуя best practic, вся работа с транзакциями должна быть на уровне Service, а какой конкретно прокси будет выбран зависит от того, есть ли у реального объекта какие нибудь интерфейсы.
				  EnableTransactionManagementConfiguration - основной класс, который отвечает за управлениями транзакциями через аннотацию @Transaction

				  Если у вашего класса нет интерфейсов, Spring будет использовать CGLIB для создания подкласса целевого класса.
				  Если у вашего класса есть интерфейс (и вы используете интерфейс для взаимодействия с бином), Spring может использовать JdkDynamic для создания прокси, реализующего этот интерфейс. 



Пошаговые действие:
1. Допустим у нас есть класс, который не имеет никаких интерфейсов 
2. На основании этого, Spring создаст proxy этого целевого класса, при этом, proxy станет потомком целевого класса, а значит, в нем будут все поля и методы, что есть у целевого класса.
3. Далее произойдет вызов метода у CglibProxy 
4. Открытие транзакции
5. Вызов реального метода у целевого класса
6. Закрытие транзакции.



Дополнительн:
Если внутри реального метода, лежит вложенный метод(к примеру у repository мы вызываем метод), 
то транзакция не будет открыта по новой, открывать новую (2ую транзакцию) не логично,
Потому что, у нас есть уже открытая транзакция, т.е управление транзакцией будет осуществлятсяв рамках текущей транзакции.
Это обеспечивает cогласованность данных внутри одной транзакции и избегает ненужного открытия новой транзакции.
 
 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Примечеание:
				# Если мы решили не использовать Spring-boot, то за управление транзакциями будет отвечать  EnableTransactionManagement.
				# В тех случаях, когда мы сами решили написать код, который будет автоматически открывать/закрывать транзакции используется уже TransactionTemplateConfiguration.
				# Когда вызывается метод на прокси-объекте, Spring может внедрять свою логику до или после выполнения оригинального метода.



