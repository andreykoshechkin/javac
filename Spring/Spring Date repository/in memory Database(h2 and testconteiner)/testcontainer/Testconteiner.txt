1. подключаем зависимость (у нас уже должен быть установлен docker)

2. в applicatio-test.yml добавить: 
spring:
  datasource:
    username: test
    password: test
  jpa:
    properties.hibernate:
        hbm2ddl.auto: update

3. Создать абстрактный класс и каждый класс, который будет наследовать его, будет запускать testcontainer

@IT <-- если мы поствам свою аннотацию нат абсрактным классом, то все наследники автоматически будут использовать эту аннотацию	
@Sql({
        "classpath:sql/date.sql"		<--- каждый наследник класса TestContainersRunner будет запускать init
})
public abstract class TestContainersRunner {

    private static final PostgreSQLContainer<?> postgres = new PostgreSQLContainer<>("postgres:15.2"); <-- получаем image с docker hub

    @BeforeAll			<-- перед началом все тестов запускай контейнер
    static void run() {
        postgres.start();
    }

    @DynamicPropertySource	<--- Получаем property
    static void getPostgresProperties(DynamicPropertyRegistry registry) {
        registry.add("spring.datasource.url", postgres::getJdbcUrl);
    }
}
