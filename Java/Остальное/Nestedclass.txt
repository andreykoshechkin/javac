Nested Class - Создание класса внутри другого класса. Nested class создается, когда нужно описать конкретную часть внешнего класса. Пример: Велосипед - главный класс, Колесо - 
внутренний класс. без колеса создавать велосипед не имеет смысла

Static nested class: 					//статический класс который находится внутри другого класса.
							//При создание объектра внутреннего класса, нужно указывать сначало имя главного(Внешнего класса)а потом Внутреннего
							//Не смотря на то, что к внутренему статик классу мы должны обращаться через имя Внешнего класса, внутренний класс ни как
							  не привязан в внешнему классу.
							//Может содержать static and non-static переменные
							//Может обращаться к private static переменным внешнего класса и нооборот. 
							//Если nested класс являеться абстрактным, то внеший, не абстрактный класс может не реализовывать его методы.
							//Если мы хотим обратиться к приватной переменной внутреннего класса, то сначала нам нужно создать объект внутреннего класса 


Inner nester class:					//При создание обычного не статического класса внутри внешнего класса, мы должны в теле конструктора внешнего класса
							создать объект внутреннего класса. Это делается так  
							
							  public Main(String name, int countDoors, int horsePower) {
        						  this.name = name;
        						  this.countDoors = countDoors;
       							  this.engine = this.new Engine(horsePower); - создание объекта внутреннего класса 
   							 } 
							 //Обычный(Inner)класс не может содержать static переменные, за исключением если переменная являеться final
							   static name - нельзя, static final name = "Andrey" - можно.
							//Если мы будучи во внешнем класса хотим обратиться к приватной переменной внутреннего класса, 
							  мы сначала должны создать объект внутреннего класса.

отличие заключается в том, что inner nested класс может создаваться в конструкторе внешнего класса, А static nested class создаеться вне внешнего класса. 


Anonymous inner class					//Анонимным классом называют те классы у которых не имени
							//Java за кулисами создает анонимный класс, который становиться наследником другого класса.
							//У Анонимных классов нет конструктора, так как для создание конструктора нужно имя, у анон класса имени нет
				
							Animal animal = new Animan(){ именно тут java создает анонимный класс
							public void Какой-тоимя ()
							Тут пишем свою реализацию
							}

				