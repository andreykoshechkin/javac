Многопоточность: 					// Это принцип, построения программы, который позволяет выполнять несколько операций одновременно с достаточно
							   хорошей производиьельностью, так как операции могут быть распределенны на несколько ядер процессора. 
								  
								   

Context Switch:						// Когда опреации выполняются друг за другом.
							  это где одно ядро выполняет какую-то операции, потом останавливается, запоминает результат, 
						          после снова начинает выполнять операцию, потом снова останавливается,
							  запоминает результа и так далее. Выполнение оперции происходит очень быстро. 

Примечание**						//Один поток работает быстрее, так как ему не нужно переключаться между другими потоками. 




Варианты создания потоков 				#1 Thread  th1 = new Thread(new Имя класса который имплементит Runnable());



Простые методы Thread					//имяПотока.SetName("Имя") && имяПотока.GetName() - изменить или получить имя потока (по умолчанию Thread-0)
							//имяПотока.SetPrioryty("int") && имяПотока.GetPrioryty() - изменить или получить приоритет (по умолчанию Thread-5) 
							//Thread.currentThread() - показывает в каком потоке мы находимся.
							//Thread.getState() - состояние потока

interrupted exception 					//Исключение, которое возникает, когда один поток останавливает другой поток

							  
							 
								
Thread state(Состояние потока) 				// new - Создание потока: 		<--Состояние new достигается когда мы создаем поток через оператор new Thread();
							   runnable - Выполнение:		<--Проиходит когда мы вызываем метод start();
 							   terminadet - завершение:		<--Происходит когда мы вызываем метод join();
							//new --> runnable -->  terminadet
							
							  В свою очерель runnable делиится на read - готовность, running - когда поток выполняется