Тип данны - множество допустимых значений и операций. Сами операции зависят от конкретного типа

Переменная - это именованный участок в памяти, которая хранит в себе значение.

Цикл forEach используется только для чтения

Как импортировать классы из других пакетов - import имяПакета имяКласса;
Явно - в ручную
неЯвно - автоматически
========================================================================================================================================

Ключевое слово static:				// Ключевое слово static позволяет указать, что переменная или метод принадлежить всему классу, а не объектам.То есть,
						//static переменная существует внезависимости от объектов.благодоря чему, мы можем вызывать эту переменную или метод не создовая объект.
						//А Вот Обычная переменная (instance переменная)является частной для каждого объекта.
						//(Мы можем использовать статическую переменную в обычном методе. но не можем использовать 
						  обычную (не статическую) переменную в статическом методе, что бы мы могли использовать
						  обычную (не статическую)переменную в статическом методе нам нужно создать объект класса)
						//static часто используют для создания утилитных классов(класс которым не нужен конкретный объект)


this:						// ключевое слово this указывает нам, что мы используем переменную текущего объекта. 
						//Так же this позволяет вызвать один конструктор в теле другого конструктора



Varargs:					//Позволяет создать двухмерный массив неопределенной длины(массив бесконечной длины)


Ключевое слово final:				Используется для обозначения того, что значение переменной не может быть изменено после того, как оно было инициализировано. 
						Если переменная объявлена как final , любые попытки изменить ее значение приведут к ошибке
						//Eсли мы не хотим чтобы какой-то класс имел потомков, то этот класс должен быть как final.
						  Eсли мы не хотим чтобы какой-то метод был переопределен, то этот  метож тоже должен быть как final


============================================================================================================================================================

Восходящее преобразование (Upcasting):		// вверх по иерархии. От потомка к родителю. Происходит автоматически.
низходящее преобразование (Downcasting):	// вниз по иерархии. От Родителя к потомку. Осуществляется по принципу IS A.

оператор instanceofЖ:				//проверяет взаимосвязь объектов (Принадлежит ли объект2 instanceof объекту1)

Сериализация: 					//запись объектов в файл ввиде байт
Десериализация: 				//чтение объектов из файла

Ключевое слово transient:			//Позволяет не сериализовывать какое-то поля объекта(private transient String name). 
						  Для приметивных типов, значение ставится поуполчанию.

Сборка мусора:					//это автоматический процесс, который удаляет неиспользуемые объекты! то-есть объекты на которых никто не ссылается. 
						//Сборщик мусора можно вызвать как самостоятельно так и в ручную (System.gc()). Garbage collector
						//Java Heap (куча) - Всякий раз, когда мы создаем новый объект он создается в хипе. 
						  Используется для выделения памяти под объекты.
						//Стековая память в Java - при вызове метода создается некий блок, как только метод завершит работу, 
						  блок перестает использоватся, тем самым, предоставляя	доступ к следующему методу. 
                                                  Объект хранится в хипе. Cсылка на объект хранится в стековой памяти

Ссылочный тип данных:				//В основе ссылочного типа лежит: 
						//1) при создание ссылочного типа, ссылка храниться в стеке, а сам объект хранится в хипе. 
						//2)Для созданияссылочного типа, нам нужно спользовать оператор new