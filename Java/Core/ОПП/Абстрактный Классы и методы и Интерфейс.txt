
Абстрактный класс:
		//Нужен для того чтобы его только наследовали, так как объект абстрактного класса нельзя создать.
		//Абстрактными классами - называют некий общий шаблон
		//Абстрактный Метод- не может быть final, private, static.(final, private, static они не могут быть перезаписаны)
		//Переменные не могу быть Абстрактны
		//У Абстрактных классов есть конструктор
		//Все потомки абстрактного класса обязаны реализовать все абстрактные методы, но при этом... обычные методы можно не наследовать
		  Потомок тоже можеть быть абстрактным, в таком случае, он может и не реализовывать методы абстрактного родительского класса.
		//Абстрактный класс можеть иметь как и Абстрактные методы так и обычные
		//Абстрактный класс может быть потомком конкретного класса
		//Мы не может создавать объект абстрактного класса
		//Абстрактный класс не может быть finale... finale не может иметь наследников, а абстрактный класс как раз и создается чтобы иметь наследников.


Интерфейс:	//Интерфейс - это контракт на выполнение каких либо действий и интерфейсы нужны для добавления нового функционала
		  каждый класс который,имплементит интерфейс должен реализовать  все абстрактные методы интерфейса. Если класс является абстрактным,
 		  то он можент не реализовывать методы интерфейса.
		Все методы интерфейса по умолчанию, имееют мод.доступа public abstact	
		Интерфейсы еще более абстрактен чем абстрактный класс
		
		//В интерфейсе могу быть абстрактные методы(Методы без тела) - обязяны переопределить
		//В интерфейсе могу быть defualt методы(Методы с реализацией) - не обязяны переопределять 
		//В интерфейсе могу быть static методы(static методы не наследуются и обращаться к ним можно через имя интерфейса) 
		//В интерфейсе могу быть private method	(private методы не наследуются)и они должны быть с телом но доступны только в переделах интерфейса

		//По-умполчанию все методы интерфейса имеют модификатор дуступа public .
		//В интерфейса могут быть только константы
		//В интерфесе не может быть конструкторов
		//Интерфес может наследовать другой интерфейс (interfaces nameInterfaces extend  ИмяИнтерфейса)
		//Дефолтные методы могут быть только в интерфесе
		//Методы интерфейса не могут быть final
		//Ключевое слово defualt не связан с модификатором доступа		

		
		