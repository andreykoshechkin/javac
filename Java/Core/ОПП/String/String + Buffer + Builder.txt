String - неизменяемый, ссылочный тип данных, который содержит в себе неизменяемый, приватный массив из байтов фикс-длины.
Именно по этой причине String являеться неизменяемым типом данных.

StringPool нужен для того чтобы объекты c одинаковым значением не засоряли память.

String str1 = "hello";           // Эта строка будет в строковом пуле
String str2 = new String("hello");  // Эта строка будет в куче (heap), но не в строковом пуле

new String("hello") сначала происходит попытка найти строку в строковом пуле, и только если она не найдена, создается новый объект строки в хипе.
String s1 = "Hello" - когда мы создаем объект класса String в упрощенном варанте, java сначала будет смотреть, есть ли пободный объект в String pool, если объекта нет то java добавит
его в String pool, в противном случае, java будет ссылать новый объект на уже существуующий объект.


Method Chander - Вызов методов через точку, слева на право. 

Строки уходят в хип, если их создавать через конструктор: new String("value_here").
Если создавать просто через двойные кавычки, то уходит в String Pool: "value_here"
=================================================================================================================================================
StringBuilder (Capacity 16):		//Это изменяемый, Непотокобезопастный класс, который внутри себя как и string сожержит массив байтов, при этом имеет поле count,
					  котора считывает длину массива.
					//Под копотом рабоате так же как и arrayList, то есть, при заполнение массива создается новый массив в 2а раза больше старого.



StringBuffer 				//Это изменяемый, синхронизированный и потокобезопасный
=============
Причина использования:			если мы будем изменять string, то мы будет создавать новую строку, это казывается на производительности

