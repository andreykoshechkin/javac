
public class CopyTreeDirec_File {
    public static void main(String[] args) throws IOException {
        Path OnePath = Paths.get("C:\\Users\\79964\\Desktop\\lessonsCopyPath");
        Path TwoPath = Paths.get("C:\\Users\\79964\\Desktop\\newDirectory");

        Files.walkFileTree(OnePath, new TestCope(OnePath, TwoPath));

    }
}

class TestCope extends SimpleFileVisitor<Path> {
    Path start;
    Path end;

    public TestCope(Path start, Path end) {
        this.start = start;
        this.end = end;
    }


    @Override
    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {
        Path newDestination = end.resolve(start.relativize(dir));
        Files.copy(dir, newDestination, StandardCopyOption.REPLACE_EXISTING);
        return FileVisitResult.CONTINUE;
    }

    @Override
    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
        Path newFileDestination = end.resolve(start.relativize(file));
        Files.copy(file, newFileDestination, StandardCopyOption.REPLACE_EXISTING);
        return FileVisitResult.CONTINUE;
    }
}

Path newDestination = end.resolve(start.relativize(dir)); - склеиваем относительный путь с тем путем куда мы копируем папки.