Entity Persisters  //Entity Persisters это класс, который отвечает за операциями над сущностями и преорабузет объектно-ориентированную модель в реляционную. 
		    связь между сущностью и Entity Persisters  происходит по id.
	
Metamodel 	  //Хранит всю информациб о сущности(Тип данных, количество сущностей)

session.evict(user);
Metamodel ---> Сущность --->  Entity Persister ---> метод crud

========================================================================================================================================================================

Cache(first level cache)	//Это механизм кеширование в hibernate,  благодоря которому, мы меньше ходи в базу данных делая sql-запросы
(Persistens contex и first level cache одно и тоже)
кеш хранится в hashMap где ключем=id сущности и Entity Persisters, а значение=сама сущность
  
Методы которые удалять сущность из кеша:
session.evict(user);	<<< Удаляет сущность из кеша
session.clear();	<<< Полностью чистит кеш (все сущности будут удалены из  hashMap)
session.close();	<<< Закрывает сессию

========================================================================================================================================================================

Dirty session: если session содержит какие-то изменения, то они обязаны будут синхронизироваться с базой данных. Другими словами, Каждая сущность привязанна к своей сессии 
и если мы захотим изменить это сущность в рамках этой сессии, то эти изменение так же отрозиться в базе данных

  User user1 = session.get(User.class, "richadr@gmail.com"); <<< Получаем сущность по его ID
  Данные, которые мы полуили: 
 		    username="richadr@gmail.com"
                    firstname="Richard"
                    lastname="Koshechkin"
                    birthday=1995/1/9
                    role=ADMIN


user1.setFirstname("Test"); <<<После того как мы используем setFirstname, мы изменим имя у сущности и в базе данных firstname измениться с "Richard" на "Test"

========================================================================================================================================================================