Cache(first level cache)	//Это механизм кеширование, который реализован в hibernate,  благодоря которому, мы меньше ходи в базу данных делая sql-запросы
				//First level cache включен поумолчанию.
				//Persistens contex и first level cache одно и тоже 
				//У каждой сессии есть свой  Persistens contex
				//работает на уровне session

Кеш хранится в hashMap где ключем=id сущности и Entity Persisters, а значение=сама сущность.

Методы save,delete,update,get кладут в  Persistens contex сущность, только после того, как мы сделаем запрос в  базу данных

=======================================================================================================================================
У каждой сущности есть свой жизненный цикл, В жизненый цикл сущности мы можем попасть вызвав соответствующий метод: 


Когда мы создаем сущность она еще не привязанна к сессии, а значит, находится в состоянии transeint. Когда мы сохраняем эту сущность, она переходит из состояния 
transeint в состоянии persistent. Когда мы закрываем сессию, эта сущность переходит в состоянии detached, так как для каждой сессии есть свой кеш первого уровня 
и после закрытия сессии, кеш так же будет очищен. Если мы повторно захотим достать сущность и обновить, тогда мы из состояния detached снова перейдем в состояние persistent. 

Сущность должна быть привязанна к сессии
Каждая сущность имеет свою состояние.

Transeint  - когда сущность еще не связанна с сессией	
Persistent - когда сущность связанна с сессией
Detached   - когда мы чистим кеш.
Removed.   - когда мы удаляем сущность 

Transeint:  Когда мы создаем объект, то этот объект еще не связан с сессией, поэтому этот объект находится на цикле Transeint
(в Transeint мы попадаем, когда мы создаем сущность, потому-что сущность еще не связанная с session  )

Persistent: Мы поподаем в цикл Persistent, когда связываем нашу сузность с session. 
	    Методы save, saveOrUpdate связывает нашу сущность с сессией(эти методы мы вызываем у session) и мы переходим в цикл Persistent.
	    Когда мы используем метод get() или достаем сущность с помощью HQL, то сущность так же переходит в состояние Persistent.

Removed:    Когда мы удаляем сущность(она удаляется из кеша), она попадает в цикл Removed
Detached:   В этот цикл мы можем попасть вызвав методы evict, clear, close, мы удаляем из кеша. Отличаться от Transeint тем, что сущность Detached, раньше была связанна с сессией
=======================================================================================================================================
То как работает first level cache:

Когда нам нужно получить сусщность, мы обращаемся в кеш первого уровня. Если нужной сущности там нет, то тогда будет создан запрос на получение этой сущности из базы данных,
после этого, сущность закешируеться и собственно вернется нам. Если мы повторно захотим получить эту сущность, через одну и туже сессию,  
то мы уже не будет делать запрос в базу данных, так как после первого запроса, сущность осталась в кеше.

Если мы хотим получить эту же сущность через другую сессию, то нам уже придеться обращаться в базу данных, так как в кеши второй сессии, этой сущности нет
