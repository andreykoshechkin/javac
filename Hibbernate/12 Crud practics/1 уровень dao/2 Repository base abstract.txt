@RequiredArgsConstructor
public abstract class RepositoryBaseDao<K extends Serializable, E extends GenerationId<K>> implements RepositoryDao<K, E> {

    @Getter
    private final EntityManager entityManager;
    private final Class<E> clazz;

    @Override
    public E save(E entity) {
        entityManager.persist(entity);
        return entity;
    }

   @Override
    public void delete(K id) {
        entityManager.remove(entityManager.find(clazz,id));
        entityManager.flush();
    }

    @Override
    public void updateByEntity(E entity) {
        entityManager.merge(entity);
    }

    @Override
    public Optional<E> findById(K id) {
        return Optional.ofNullable(entityManager.find(clazz, id));
    }

    @Override
    public List<E> findAll() {
        var criteriaBuilder = entityManager.getCriteriaBuilder();
        var criteria = criteriaBuilder.createQuery(clazz);
        criteria.from(clazz);
        return entityManager.createQuery(criteria).getResultList();
    }
}
