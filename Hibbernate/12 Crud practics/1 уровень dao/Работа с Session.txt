Закрывать session на уровне dao после вызозва каждого метода не стоит, так как мы хотим работать с этими методами на уровне сервиса с одним соединением.  
(Если мы из service вызовем любой метод из dao слоя, то мы получим ошибку, так как sessia была закрыта на уровне dao)

=======================================================================================================================================

ТАК ДЕЛАТЬ НЕЛЬЗЯ!

public void update (E entity){
@Cleanup Session session = SessionFactory.openSession();     <--- Закрываем сессию в методе update на уровне dao, так делать нельзя!
session.merge(entity);
}

=======================================================================================================================================

РЕШЕНИЕ: Нам не обязательно открывать session, мы просто можем получать текущую session.

public void update (E entity){
@Cleanup Session session = SessionFactory.getCurrentSession() <--- Получили текущую сессию.
session.merge(entity);
}

=======================================================================================================================================

Hibernate с помощью CurrentSessionContext понимает как получить текущую сессию. Всего существует 3 context'a:
 1. JTASessionContext
 2. ManagedSessionContext 
 3. ThreadLocalSessionContext  	<-- Использует ThreadLocal переменную. Автоматически открывает и закрывает Session. Закрытие session происходит тогда,
				    когда мы делаем commit или rollback.

 Чтобы мы начали использовать ThreadLocalSessionContext нужно в hibernate.cfg добавить property
  <property name="hibernate.current_session_context_class">thread</property>

=======================================================================================================================================